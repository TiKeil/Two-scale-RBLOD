Using MPI parallel run, make sure to use mpirun.
00:00 MPIPool: Connected to 64 ranks
Rank 6: MPI parallel run detected. Launching event loop ...

STARTING SCRIPT ...

Coarse FEM mesh:            8 x 8
Fine FEM mesh:              256 x 256
k:                          2
|log H|:                    1.73
number of fine dofs         66049
max fine dofs per patch:    25600
number of parallel kernels: 64 

GREEDY TOLERANCES: 
Stage 1:   0.001
Two-scale: 0.01

Training set size per dimension:     50
Training set size old stage 1:       50
Training set size two-scale stage 1: 200

prepare patches ... 

approximating contrast ... 
contrast: 13.470865915484772,   min_alpha: 0.5925619923431722

............ BUILDING RB Models for Corrector Problems...........
 
|                                                                                                                                |
 ................................................................ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss --> THIS TOOK 71.14081 seconds and requires ~382.89 MB

 ................................................................ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss --> THIS TOOK 106.43849 seconds and requires ~293.23 MB

............ BUILDING TWO SCALE RBLOD PROBLEM ...........

contrast: 13.470865915484772,   min_alpha: 0.5925619923431722,     constant: 2.904812509863091

..... REDUCTOR WITH CERTIFIED ERROR ESTIMATOR ...........

03:01 weak_greedy: Started greedy search on training set of size 50.
03:01 weak_greedy: Estimating errors ...
03:01 |   RBSurrogate: Reducing ...
03:01 |   |   ResidualReductor: Estimating residual range ...
03:01 |   |   |   estimate_image_hierarchical: Estimating image for basis vector -1 ...
03:01 |   |   |   estimate_image_hierarchical: Orthonormalizing ...
03:01 |   |   ResidualReductor: Projecting residual operator ...
03:01 weak_greedy: Maximum error after 0 extensions: 0.5382422463689667 (mu = {mu: [0.0]})
03:01 weak_greedy: Extending surrogate for mu = {mu: [0.0]} ...
03:01 |   RBSurrogate: Computing solution snapshot for mu = {mu: [0.0]} ...
03:01 |   RBSurrogate: Extending basis with solution snapshot ...
03:01 |   RBSurrogate: Reducing ...
03:01 |   |   ResidualReductor: Estimating residual range ...
03:01 |   |   |   estimate_image_hierarchical: Estimating image for basis vector 0 ...
03:02 |   |   |   estimate_image_hierarchical: Orthonormalizing ...
03:02 |   |   |   |   gram_schmidt: Removing linearly dependent vector 4
03:02 |   |   ResidualReductor: Projecting residual operator ...
      
03:02 weak_greedy: Estimating errors ...
03:02 weak_greedy: Maximum error after 1 extensions: 1.0566770677287944 (mu = {mu: [4.4897959183673475]})
03:02 weak_greedy: Extending surrogate for mu = {mu: [4.4897959183673475]} ...
03:02 |   RBSurrogate: Computing solution snapshot for mu = {mu: [4.4897959183673475]} ...
03:02 |   RBSurrogate: Extending basis with solution snapshot ...
03:02 |   |   gram_schmidt: Orthonormalizing vector 1 again
03:02 |   RBSurrogate: Reducing ...
03:02 |   |   ResidualReductor: Estimating residual range ...
03:02 |   |   |   estimate_image_hierarchical: Estimating image for basis vector 1 ...
03:02 |   |   |   estimate_image_hierarchical: Orthonormalizing ...
03:02 |   |   |   |   gram_schmidt: Orthonormalizing vector 4 again
03:02 |   |   |   |   gram_schmidt: Orthonormalizing vector 5 again
03:02 |   |   |   |   gram_schmidt: Orthonormalizing vector 6 again
03:02 |   |   |   |   gram_schmidt: Orthonormalizing vector 7 again
03:02 |   |   ResidualReductor: Projecting residual operator ...
      
03:02 weak_greedy: Estimating errors ...
03:02 weak_greedy: Maximum error after 2 extensions: 0.48610950298424604 (mu = {mu: [1.1224489795918369]})
03:02 weak_greedy: Extending surrogate for mu = {mu: [1.1224489795918369]} ...
03:02 |   RBSurrogate: Computing solution snapshot for mu = {mu: [1.1224489795918369]} ...
03:03 |   RBSurrogate: Extending basis with solution snapshot ...
03:03 |   |   gram_schmidt: Orthonormalizing vector 2 again
03:03 |   RBSurrogate: Reducing ...
03:03 |   |   ResidualReductor: Estimating residual range ...
03:03 |   |   |   estimate_image_hierarchical: Estimating image for basis vector 2 ...
03:03 |   |   |   estimate_image_hierarchical: Orthonormalizing ...
03:03 |   |   |   |   gram_schmidt: Orthonormalizing vector 8 again
03:03 |   |   |   |   gram_schmidt: Orthonormalizing vector 9 again
03:03 |   |   |   |   gram_schmidt: Orthonormalizing vector 10 again
03:03 |   |   |   |   gram_schmidt: Orthonormalizing vector 11 again
03:03 |   |   ResidualReductor: Projecting residual operator ...
      
03:03 weak_greedy: Estimating errors ...
03:03 weak_greedy: Maximum error after 3 extensions: 0.12693610585284731 (mu = {mu: [1.9387755102040818]})
03:03 weak_greedy: Extending surrogate for mu = {mu: [1.9387755102040818]} ...
03:03 |   RBSurrogate: Computing solution snapshot for mu = {mu: [1.9387755102040818]} ...
03:03 |   RBSurrogate: Extending basis with solution snapshot ...
03:03 |   |   gram_schmidt: Orthonormalizing vector 3 again
03:03 |   RBSurrogate: Reducing ...
03:04 |   |   ResidualReductor: Estimating residual range ...
03:04 |   |   |   estimate_image_hierarchical: Estimating image for basis vector 3 ...
03:04 |   |   |   estimate_image_hierarchical: Orthonormalizing ...
03:04 |   |   |   |   gram_schmidt: Orthonormalizing vector 12 again
03:04 |   |   |   |   gram_schmidt: Orthonormalizing vector 13 again
03:04 |   |   |   |   gram_schmidt: Orthonormalizing vector 14 again
03:04 |   |   |   |   gram_schmidt: Orthonormalizing vector 15 again
03:04 |   |   ResidualReductor: Projecting residual operator ...
      
03:04 weak_greedy: Estimating errors ...
03:04 weak_greedy: Maximum error after 4 extensions: 0.0821309665360395 (mu = {mu: [5.0]})
03:04 weak_greedy: Extending surrogate for mu = {mu: [5.0]} ...
03:04 |   RBSurrogate: Computing solution snapshot for mu = {mu: [5.0]} ...
03:04 |   RBSurrogate: Extending basis with solution snapshot ...
03:04 |   |   gram_schmidt: Orthonormalizing vector 4 again
03:04 |   RBSurrogate: Reducing ...
03:04 |   |   ResidualReductor: Estimating residual range ...
03:04 |   |   |   estimate_image_hierarchical: Estimating image for basis vector 4 ...
03:05 |   |   |   estimate_image_hierarchical: Orthonormalizing ...
03:05 |   |   |   |   gram_schmidt: Orthonormalizing vector 16 again
03:05 |   |   |   |   gram_schmidt: Orthonormalizing vector 17 again
03:05 |   |   |   |   gram_schmidt: Orthonormalizing vector 18 again
03:05 |   |   |   |   gram_schmidt: Removing linearly dependent vector 19
03:05 |   |   ResidualReductor: Projecting residual operator ...
      
03:05 weak_greedy: Estimating errors ...
03:05 weak_greedy: Maximum error after 5 extensions: 0.04595544286780144 (mu = {mu: [0.40816326530612246]})
03:05 weak_greedy: Extending surrogate for mu = {mu: [0.40816326530612246]} ...
03:05 |   RBSurrogate: Computing solution snapshot for mu = {mu: [0.40816326530612246]} ...
03:05 |   RBSurrogate: Extending basis with solution snapshot ...
03:05 |   |   gram_schmidt: Orthonormalizing vector 5 again
03:05 |   RBSurrogate: Reducing ...
03:05 |   |   ResidualReductor: Estimating residual range ...
03:05 |   |   |   estimate_image_hierarchical: Estimating image for basis vector 5 ...
03:06 |   |   |   estimate_image_hierarchical: Orthonormalizing ...
03:06 |   |   |   |   gram_schmidt: Orthonormalizing vector 19 again
03:06 |   |   |   |   gram_schmidt: Orthonormalizing vector 20 again
03:06 |   |   |   |   gram_schmidt: Orthonormalizing vector 21 again
03:06 |   |   |   |   gram_schmidt: Orthonormalizing vector 22 again
03:06 |   |   ResidualReductor: Projecting residual operator ...
      
03:06 weak_greedy: Estimating errors ...
03:06 weak_greedy: Maximum error after 6 extensions: 0.025880643347269666 (mu = {mu: [0.8163265306122449]})
03:06 weak_greedy: Extending surrogate for mu = {mu: [0.8163265306122449]} ...
03:06 |   RBSurrogate: Computing solution snapshot for mu = {mu: [0.8163265306122449]} ...
03:06 |   RBSurrogate: Extending basis with solution snapshot ...
03:06 |   |   gram_schmidt: Orthonormalizing vector 6 again
03:06 |   RBSurrogate: Reducing ...
03:06 |   |   ResidualReductor: Estimating residual range ...
03:06 |   |   |   estimate_image_hierarchical: Estimating image for basis vector 6 ...
03:07 |   |   |   estimate_image_hierarchical: Orthonormalizing ...
03:07 |   |   |   |   gram_schmidt: Orthonormalizing vector 23 again
03:07 |   |   |   |   gram_schmidt: Orthonormalizing vector 24 again
03:07 |   |   |   |   gram_schmidt: Orthonormalizing vector 25 again
03:07 |   |   |   |   gram_schmidt: Orthonormalizing vector 26 again
03:07 |   |   ResidualReductor: Projecting residual operator ...
      
03:07 weak_greedy: Estimating errors ...
03:07 weak_greedy: Maximum error after 7 extensions: 0.01117668242906484 (mu = {mu: [2.7551020408163267]})
03:07 weak_greedy: Extending surrogate for mu = {mu: [2.7551020408163267]} ...
03:07 |   RBSurrogate: Computing solution snapshot for mu = {mu: [2.7551020408163267]} ...
03:07 |   RBSurrogate: Extending basis with solution snapshot ...
03:07 |   |   gram_schmidt: Orthonormalizing vector 7 again
03:07 |   RBSurrogate: Reducing ...
03:07 |   |   ResidualReductor: Estimating residual range ...
03:07 |   |   |   estimate_image_hierarchical: Estimating image for basis vector 7 ...
03:08 |   |   |   estimate_image_hierarchical: Orthonormalizing ...
03:08 |   |   |   |   gram_schmidt: Orthonormalizing vector 27 again
03:08 |   |   |   |   gram_schmidt: Orthonormalizing vector 28 again
03:08 |   |   |   |   gram_schmidt: Orthonormalizing vector 29 again
03:08 |   |   |   |   gram_schmidt: Orthonormalizing vector 30 again
03:08 |   |   ResidualReductor: Projecting residual operator ...
      
03:08 weak_greedy: Estimating errors ...
03:08 weak_greedy: Maximum error after 8 extensions: 0.008236057747998302 (mu = {mu: [3.5714285714285716]})
03:08 weak_greedy: Absolute error tolerance (0.01) reached! Stoping extension loop.
03:08 weak_greedy: Greedy search took 7.508951874000104 seconds
PARAMETERS FOR REDUCTION: 

           mus: [0.], 
                [4.48979592], 
                [1.12244898], 
                [1.93877551], 
                [5.], 
                [0.40816327], 
                [0.81632653], 
                [2.75510204], 
                [3.57142857], 
                
   with errors: 0.538242246369, 
                1.056677067729, 
                0.486109502984, 
                0.126936105853, 
                0.082130966536, 
                0.045955442868, 
                0.025880643347, 
                0.011176682429, 
                0.008236057748, 
                
    extensions: 9

 ... TWO SCALE MODEL COMPLETED ! 

Parameters used for verification:
  [2.75398951]
  [3.54073911]
  [1.45452369]
  [2.55413803]
  [4.46473477]
  [4.48146544]
  [0.62792655]
  [1.03621439]
  [0.25733602]
  [2.20404922]

Executing online FEM took 0.85285s
Executing online FEM took 0.83670s
Executing online FEM took 0.83435s
Executing online FEM took 0.84682s
Executing online FEM took 0.83225s
Executing online FEM took 0.84678s
Executing online FEM took 0.83275s
Executing online FEM took 0.84946s
Executing online FEM took 0.83365s
Executing online FEM took 0.84650s

Computing reference LOD ...
       --> Executing online step 1 LOD took 0.69818s
       --> Executing online step 1 LOD took 0.68526s
       --> Executing online step 1 LOD took 0.68945s
       --> Executing online step 1 LOD took 0.71709s
       --> Executing online step 1 LOD took 0.69971s
       --> Executing online step 1 LOD took 0.64841s
       --> Executing online step 1 LOD took 0.63752s
       --> Executing online step 1 LOD took 0.67070s
       --> Executing online step 1 LOD took 0.68070s
       --> Executing online step 1 LOD took 0.65432s

Computing stage 1 henning RBLOD ...
       --> Executing online step 1 RBLOD took 0.05101s
       --> Executing online step 1 RBLOD took 0.04923s
       --> Executing online step 1 RBLOD took 0.04935s
       --> Executing online step 1 RBLOD took 0.04883s
       --> Executing online step 1 RBLOD took 0.04864s
       --> Executing online step 1 RBLOD took 0.04884s
       --> Executing online step 1 RBLOD took 0.04878s
       --> Executing online step 1 RBLOD took 0.04879s
       --> Executing online step 1 RBLOD took 0.05012s
       --> Executing online step 1 RBLOD took 0.04863s

Computing TSRBLOD ...
       --> Executing online resmin TSRBLOD took 0.00030s
       --> Executing online resmin TSRBLOD took 0.00029s
       --> Executing online resmin TSRBLOD took 0.00027s
       --> Executing online resmin TSRBLOD took 0.00028s
       --> Executing online resmin TSRBLOD took 0.00027s
       --> Executing online resmin TSRBLOD took 0.00027s
       --> Executing online resmin TSRBLOD took 0.00027s
       --> Executing online resmin TSRBLOD took 0.00027s
       --> Executing online resmin TSRBLOD took 0.00028s
       --> Executing online resmin TSRBLOD took 0.00027s

SIZES OF THE ROMS 
total size of henning stage 1:       2346 (all succeeded)
average size of henning stage 1:     9.1640625
total size of TSRBLOD stage 1:       1670 (all succeeded)
average size of TSRBLOD stage 1:     26.09375
size of new two scale rom:           8 (succeeded)

TIMINGS OFFLINE 
total time of parallel henning stage 1:     71.141 seconds
average time of single henning stage 1:     41.042 seconds
total time of parallel two-scale stage 1:   106.438 seconds
average time of single TSRBLOD stage 1:     61.997 seconds
total time of certified two-scale stage 2:  7.509 seconds
total time of TSRBLOD                       113.947 seconds

COMPARE ONLINE TIMINGS 
time for FEM:                       0.84121 seconds
time for PG-LOD                     0.68993 seconds
time for henning RBLOD              0.06102 seconds --> speed-up: 11.307
time for TSRBLOD                    0.00020 seconds --> speed-up: 3452.550
time for residual min TSRBLOD       0.00028 seconds --> speed-up: 2506.132

Additional information on henning RB: 
Step 1: Assembly of all K_i parts:  0.04922 seconds
Step 2: Assembly of global Kms:     0.01115 seconds
Step 3: Solve the coarse system:    0.00064 seconds
In total:                           0.06102 seconds

 ***************************************************** 

MAX Estimator values 

Maximal certified estimator value:   0.008215829552
Maximal fine estimator value:        0.008211448522
Maximal coarse estimator value:      0.000268269261

 ***************************************************** 

MAX RELATIVE ENERGY ERRORS 

relative energy error of henning RBLOD vs coarse LOD:    0.000018221111 
relative energy error of res TSRBLOD vs coarse LOD:      0.000730092674 
relative energy error of TSRBLOD vs coarse LOD:          0.000621663546 

relative energy error of fine LOD vs FEM:                0.088256120403 
relative energy error of fine RBLOD vs FEM:              0.088256798048 
relative energy error of fine TSRBLOD vs FEM:            0.088258826191 

 ***************************************************** 

MAX RELATIVE H1 ERRORS 

relative h1 error of henning RBLOD vs coarse LOD:    0.000019736589 
relative h1 error of res TSRBLOD vs coarse LOD:      0.000807584588 
relative h1 error of TSRBLOD vs coarse LOD:          0.000652780526 

relative h1 error of fine LOD vs FEM:                0.102038139129 
relative h1 error of fine RBLOD vs FEM:              0.102038762305 
relative h1 error of fine TSRBLOD vs FEM:            0.102041522090 

 ***************************************************** 

MAX RELATIVE L2 ERRORS 

relative l2 error of henning RBLOD vs coarse LOD:    0.000004890046 
relative l2 error of res TSRBLOD vs coarse LOD:      0.000271488023 
relative l2 error of TSRBLOD vs coarse LOD:          0.000163759128 

relative l2 error of henning RBLOD vs FEM:           0.024620100193 
relative l2 error of res TSRBLOD vs FEM:             0.024620246469 
relative l2 error of TSRBLOD vs FEM:                 0.024619579120 
relative l2 error of coarse LOD vs FEM:              0.024620089389 
Job 9369042 completed successfully!
